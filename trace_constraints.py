from z3 import *
Packet = Datatype('Packet')
Packet.declare('Packet', ('in_port', IntSort()), ('src', IntSort()), ('dest', IntSort()))
Packet = Packet.create()
Rule = Datatype('Rule')
Rule.declare('Rule', ('out_port', IntSort()))
Rule = Rule.create()
t0 = K(IntSort(), 0)
solver = Solver()
ip,s,d = Ints("ip s d")
#solver.add(ForAll(ip,s,d, Packet.in_port(Packet.Packet(ip, s, d)) != 0))
x = Int('x')
f = Function('f', IntSort(), IntSort())
solver.add(ForAll(x, f(x) == x))
#solver.add(ForAll(Packet,dd Packt.in_port < 100))
in_port, src, dest = Ints("in_port src dest")
#solver.add(in_port < 100)
#solver.add(in_port != 0)
t2 = Packet.Packet(in_port, src, dest)
t0 = Update(t0, Packet.src(t2), Packet.in_port(t2))
in_port2, src2, dest2 = Ints("in_port2 src2 dest2")
solver.add(dest2 == src)
t3 = Packet.Packet(in_port2, src2, dest2)
o = Rule.Rule(If(t0[Packet.dest(t3)] != 0, t0[Packet.dest(t3)], 100))
solver.add(Rule.out_port(o) == 100)
r = solver.check()
print r
print solver.model()
